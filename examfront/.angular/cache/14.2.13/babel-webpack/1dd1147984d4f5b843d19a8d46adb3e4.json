{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nexport let NotificationService = /*#__PURE__*/(() => {\n  class NotificationService {\n    /**\r\n     * Creates an instance of NotificationService.\r\n     * @param snack Angular Material snack bar service for showing snack messages.\r\n     */\n    constructor(snack) {\n      this.snack = snack;\n    }\n    /**\r\n     * Shows a success notification using SweetAlert2.\r\n     * @param message The message to display.\r\n     * @param title The title of the notification. Defaults to 'Success'.\r\n     */\n\n\n    success(message, title = 'Success') {\n      Swal.fire(title, message, 'success');\n    }\n    /**\r\n     * Shows an error notification using SweetAlert2.\r\n     * @param message The message to display.\r\n     * @param title The title of the notification. Defaults to 'Error'.\r\n     */\n\n\n    error(message, title = 'Error') {\n      Swal.fire(title, message, 'error');\n    }\n    /**\r\n     * Shows a warning notification using SweetAlert2.\r\n     * @param message The message to display.\r\n     * @param title The title of the notification. Defaults to 'Warning'.\r\n     */\n\n\n    warning(message, title = 'Warning') {\n      Swal.fire(title, message, 'warning');\n    }\n    /**\r\n     * Shows an informational notification using SweetAlert2.\r\n     * @param message The message to display.\r\n     * @param title The title of the notification. Defaults to 'Info'.\r\n     */\n\n\n    info(message, title = 'Info') {\n      Swal.fire(title, message, 'info');\n    }\n    /**\r\n     * Shows a snack bar message using Angular Material.\r\n     * @param message The message to display.\r\n     * @param duration Duration in milliseconds. Defaults to 3000.\r\n     */\n\n\n    snackMessage(message, duration = 3000) {\n      this.snack.open(message, '', {\n        duration,\n        verticalPosition: 'top'\n      });\n    }\n    /**\r\n     * Muestra un modal de confirmación usando SweetAlert2.\r\n     * @param message Mensaje a mostrar en el modal.\r\n     * @param title Título del modal. Por defecto '¿Estás seguro?'.\r\n     * @returns Promise<boolean> Resuelve true si el usuario confirma, false si cancela.\r\n     */\n\n\n    confirm(message, title = '¿Estás seguro?') {\n      return Swal.fire({\n        title,\n        text: message,\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonText: 'Sí',\n        cancelButtonText: 'No',\n        customClass: {\n          confirmButton: 'mat-raised-button mat-primary swal2-confirm mr20',\n          cancelButton: 'mat-raised-button mat-warn swal2-cancel'\n        },\n        buttonsStyling: false\n      }).then(result => result.isConfirmed);\n    }\n\n  }\n\n  NotificationService.ɵfac = function NotificationService_Factory(t) {\n    return new (t || NotificationService)(i0.ɵɵinject(i1.MatSnackBar));\n  };\n\n  NotificationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NotificationService,\n    factory: NotificationService.ɵfac,\n    providedIn: 'root'\n  });\n  return NotificationService;\n})();","map":null,"metadata":{},"sourceType":"module"}