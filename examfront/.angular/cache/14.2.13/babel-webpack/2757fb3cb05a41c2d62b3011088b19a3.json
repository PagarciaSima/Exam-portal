{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n/**\r\n * Service for managing categories.\r\n */\n\nexport let CategoryService = /*#__PURE__*/(() => {\n  class CategoryService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = `${environment.apiUrl}/category`;\n    }\n    /**\r\n     * Get all categories.\r\n     */\n\n\n    getCategories() {\n      return this.http.get(`${this.apiUrl}/`);\n    }\n    /**\r\n     * Get a category by id.\r\n     */\n\n\n    getCategory(id) {\n      return this.http.get(`${this.apiUrl}/${id}`);\n    }\n    /**\r\n     * Add a new category.\r\n     */\n\n\n    addCategory(category) {\n      return this.http.post(`${this.apiUrl}/`, category);\n    }\n    /**\r\n     * Update an existing category.\r\n     */\n\n\n    updateCategory(category) {\n      return this.http.put(`${this.apiUrl}`, category);\n    }\n    /**\r\n     * Delete a category by id.\r\n     */\n\n\n    deleteCategory(id) {\n      return this.http.delete(`${this.apiUrl}/${id}`);\n    }\n    /**\r\n     * Create a new category.\r\n     */\n\n\n    createCategory(category) {\n      return this.http.post(`${this.apiUrl}`, category);\n    }\n    /**\r\n     * Get paginated categories.\r\n     */\n\n\n    getCategoriesPaged(page, size, search) {\n      let params = `?page=${page}&size=${size}`;\n\n      if (search && search.trim()) {\n        params += `&search=${encodeURIComponent(search.trim())}`;\n      }\n\n      return this.http.get(`${this.apiUrl}/paged${params}`);\n    }\n\n  }\n\n  CategoryService.ɵfac = function CategoryService_Factory(t) {\n    return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CategoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CategoryService,\n    factory: CategoryService.ɵfac,\n    providedIn: 'root'\n  });\n  return CategoryService;\n})();","map":null,"metadata":{},"sourceType":"module"}