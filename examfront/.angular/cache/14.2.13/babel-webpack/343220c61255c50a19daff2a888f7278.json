{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@ngx-translate/core\";\n\nfunction ProfileChangePasswordComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 2, \"PASSWORDS_DO_NOT_MATCH\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 4, \"PASSWORDS_DO_NOT_MATCH\"), \" \");\n  }\n}\n\nexport let ProfileChangePasswordComponent = /*#__PURE__*/(() => {\n  class ProfileChangePasswordComponent {\n    constructor(dialogRef, data) {\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.newPassword = '';\n      this.confirmPassword = '';\n    }\n\n    ngOnInit() {}\n    /**\r\n     * Saves the new password if it matches the confirmation password.\r\n     * Closes the dialog and returns the new password to the caller.\r\n     * If the passwords do not match, the dialog remains open for correction.\r\n     */\n\n\n    save() {\n      if (this.newPassword && this.newPassword === this.confirmPassword) {\n        this.dialogRef.close(this.newPassword); // returns new password to the caller\n      }\n    }\n\n    cancel() {\n      this.dialogRef.close(null);\n    }\n\n  }\n\n  ProfileChangePasswordComponent.ɵfac = function ProfileChangePasswordComponent_Factory(t) {\n    return new (t || ProfileChangePasswordComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  ProfileChangePasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProfileChangePasswordComponent,\n    selectors: [[\"app-profile-change-password\"]],\n    decls: 32,\n    vars: 44,\n    consts: [[\"autocomplete\", \"off\", \"role\", \"form\", 3, \"ngSubmit\"], [\"type\", \"text\", \"name\", \"username\", \"autocomplete\", \"username\", \"hidden\", \"\", \"aria-hidden\", \"true\", 3, \"value\"], [2, \"width\", \"100%\"], [\"matInput\", \"\", \"id\", \"newPasswordInput\", \"name\", \"newPassword\", \"type\", \"password\", \"required\", \"\", \"autocomplete\", \"new-password\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"newPasswordDesc\", 1, \"visually-hidden\"], [\"matInput\", \"\", \"id\", \"confirmPasswordInput\", \"name\", \"confirmPassword\", \"type\", \"password\", \"required\", \"\", \"autocomplete\", \"new-password\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"confirmPasswordDesc\", 1, \"visually-hidden\"], [\"style\", \"color:red;\", \"role\", \"alert\", \"aria-live\", \"assertive\", 4, \"ngIf\"], [\"align\", \"end\"], [\"mat-button\", \"\", \"type\", \"button\", \"role\", \"button\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", \"role\", \"button\", 3, \"disabled\"], [\"role\", \"alert\", \"aria-live\", \"assertive\", 2, \"color\", \"red\"]],\n    template: function ProfileChangePasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ProfileChangePasswordComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵpipe(1, \"translate\");\n        i0.ɵɵelement(2, \"input\", 1);\n        i0.ɵɵelementStart(3, \"mat-dialog-content\")(4, \"mat-form-field\", 2)(5, \"mat-label\");\n        i0.ɵɵtext(6);\n        i0.ɵɵpipe(7, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function ProfileChangePasswordComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.newPassword = $event;\n        });\n        i0.ɵɵpipe(9, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"span\", 4);\n        i0.ɵɵtext(11);\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"mat-form-field\", 2)(14, \"mat-label\");\n        i0.ɵɵtext(15);\n        i0.ɵɵpipe(16, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function ProfileChangePasswordComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.confirmPassword = $event;\n        });\n        i0.ɵɵpipe(18, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"span\", 6);\n        i0.ɵɵtext(20);\n        i0.ɵɵpipe(21, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(22, ProfileChangePasswordComponent_div_22_Template, 4, 6, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"mat-dialog-actions\", 8)(24, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function ProfileChangePasswordComponent_Template_button_click_24_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵpipe(25, \"translate\");\n        i0.ɵɵtext(26);\n        i0.ɵɵpipe(27, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"button\", 10);\n        i0.ɵɵpipe(29, \"translate\");\n        i0.ɵɵtext(30);\n        i0.ɵɵpipe(31, \"translate\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 22, \"CHANGE_PASSWORD\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.data.user == null ? null : ctx.data.user.username);\n        i0.ɵɵadvance(3);\n        i0.ɵɵattribute(\"for\", \"newPasswordInput\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 24, \"NEW_PASSWORD\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.newPassword);\n        i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(9, 26, \"NEW_PASSWORD\"))(\"aria-describedby\", \"newPasswordDesc\")(\"aria-invalid\", ctx.newPassword && ctx.confirmPassword && ctx.newPassword !== ctx.confirmPassword ? \"true\" : null);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(12, 28, \"ENTER_NEW_PASSWORD\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵattribute(\"for\", \"confirmPasswordInput\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 30, \"CONFIRM_PASSWORD\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.confirmPassword);\n        i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(18, 32, \"CONFIRM_PASSWORD\"))(\"aria-describedby\", \"confirmPasswordDesc\")(\"aria-invalid\", ctx.newPassword && ctx.confirmPassword && ctx.newPassword !== ctx.confirmPassword ? \"true\" : null);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(21, 34, \"REPEAT_NEW_PASSWORD\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.newPassword && ctx.confirmPassword && ctx.newPassword !== ctx.confirmPassword);\n        i0.ɵɵadvance(2);\n        i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(25, 36, \"CANCEL\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(27, 38, \"CANCEL\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.newPassword || ctx.newPassword !== ctx.confirmPassword);\n        i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(29, 40, \"SAVE\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(31, 42, \"SAVE\"), \" \");\n      }\n    },\n    dependencies: [i2.NgIf, i3.MatFormField, i3.MatLabel, i4.MatInput, i5.MatButton, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.NgModel, i6.NgForm, i1.MatDialogContent, i1.MatDialogActions, i7.TranslatePipe],\n    styles: [\".visually-hidden[_ngcontent-%COMP%]{position:absolute!important;width:1px!important;height:1px!important;padding:0!important;margin:-1px!important;overflow:hidden!important;clip:rect(0,0,0,0)!important;white-space:nowrap!important;border:0!important}\"]\n  });\n  return ProfileChangePasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}