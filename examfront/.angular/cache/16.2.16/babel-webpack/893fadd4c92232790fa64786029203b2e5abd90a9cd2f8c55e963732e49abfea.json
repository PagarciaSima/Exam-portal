{"ast":null,"code":"import { slideIn } from 'src/app/animations/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/category.service\";\nimport * as i2 from \"src/app/services/notification.service\";\nimport * as i3 from \"src/app/services/quiz.service\";\nimport * as i4 from \"@ngx-translate/core\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/forms\";\nimport * as i12 from \"@angular/material/card\";\nimport * as i13 from \"@angular/material/select\";\nimport * as i14 from \"@angular/material/core\";\nimport * as i15 from \"@angular/material/slide-toggle\";\nconst _c0 = [\"quizForm\"];\nfunction AddQuizComponent_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 37);\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 2, \"QUIZ_TITLE_REQUIRED\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 4, \"QUIZ_TITLE_REQUIRED\"), \" \");\n  }\n}\nfunction AddQuizComponent_mat_error_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 38);\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 2, \"QUIZ_DESCRIPTION_REQUIRED\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 4, \"QUIZ_DESCRIPTION_REQUIRED\"), \" \");\n  }\n}\nfunction AddQuizComponent_mat_error_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 39);\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 2, \"QUIZ_MAX_MARKS_REQUIRED\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 4, \"QUIZ_MAX_MARKS_REQUIRED\"), \" \");\n  }\n}\nfunction AddQuizComponent_mat_error_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 40);\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 2, \"QUIZ_NUMBER_OF_QUESTIONS_REQUIRED\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 4, \"QUIZ_NUMBER_OF_QUESTIONS_REQUIRED\"), \" \");\n  }\n}\nfunction AddQuizComponent_mat_option_63_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 41);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r12.title, \" \");\n  }\n}\nfunction AddQuizComponent_mat_error_64_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 42);\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 2, \"QUIZ_CATEGORY_REQUIRED\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 4, \"QUIZ_CATEGORY_REQUIRED\"), \" \");\n  }\n}\nexport let AddQuizComponent = /*#__PURE__*/(() => {\n  class AddQuizComponent {\n    constructor(categoryService, notificationService, quizService, translate, router, activatedRoute) {\n      this.categoryService = categoryService;\n      this.notificationService = notificationService;\n      this.quizService = quizService;\n      this.translate = translate;\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n      this.quiz = this.setQuizDefaultValue();\n      this.isEditMode = false;\n      this.categories = [];\n    }\n    ngOnInit() {\n      this.loadCategories();\n      this.activatedRoute.params.subscribe(params => {\n        const quizId = params['qid'];\n        if (quizId) {\n          this.loadQuiz(quizId);\n          this.isEditMode = true;\n        }\n      });\n    }\n    /**\r\n     * Loads a quiz by its ID and assigns it to the local `quiz` property.\r\n     * Displays an error notification if the request fails.\r\n     * @param quizId The ID of the quiz to load.\r\n     */\n    loadQuiz(quizId) {\n      this.quizService.getQuiz(quizId).subscribe({\n        next: data => {\n          this.quiz = data;\n        },\n        error: error => {\n          this.translate.get('QUIZ_LOAD_ERROR').subscribe(msg => {\n            this.notificationService.error(msg, this.translate.instant('ERROR'));\n          });\n          console.error('Error loading quiz', error);\n        }\n      });\n    }\n    /**\r\n     * Loads the list of categories from the backend service and assigns them to the `categories` property.\r\n     *\r\n     * On success, updates the local `categories` array with the fetched data.\r\n     * On error, displays a localized error notification using the translation and notification services,\r\n     * and logs the error to the console.\r\n     *\r\n     * @returns void\r\n     */\n    loadCategories() {\n      this.categoryService.getCategories().subscribe({\n        next: data => {\n          this.categories = data;\n        },\n        error: error => {\n          this.translate.get('CATEGORY_LOAD_ERROR').subscribe(msg => {\n            this.notificationService.error(msg, this.translate.instant('ERROR'));\n          });\n          console.error('Error loading categories', error);\n        }\n      });\n    }\n    /**\r\n     * Handles the form submission for adding or editing a quiz.\r\n     * Calls the appropriate method based on the current mode (add or edit).\r\n     */\n    formSubmit() {\n      // Trim text fields before submit\n      if (this.quiz.title) this.quiz.title = this.quiz.title.trim();\n      if (this.quiz.description) this.quiz.description = this.quiz.description.trim();\n      if (this.isEditMode) {\n        this.editQuiz();\n      } else {\n        this.addQuiz();\n      }\n    }\n    /**\r\n     * Adds a new quiz using the QuizService.\r\n     * Displays success or error notifications based on the outcome of the operation.\r\n     */\n    addQuiz() {\n      this.quizService.addQuiz(this.quiz).subscribe({\n        next: () => {\n          this.translate.get('QUIZ_ADD_SUCCESS').subscribe(msg => {\n            this.notificationService.success(msg, this.translate.instant('SUCCESS'));\n          });\n          this.quizForm.resetForm();\n          this.quiz = this.setQuizDefaultValue();\n          this.router.navigate(['/admin/quizzes']);\n        },\n        error: error => {\n          this.translate.get('QUIZ_ADD_ERROR').subscribe(msg => {\n            this.notificationService.error(msg, this.translate.instant('ERROR'));\n          });\n          console.error('Error adding quiz', error);\n        }\n      });\n    }\n    /**\r\n     * Edits an existing quiz using the QuizService.\r\n     * Displays success or error notifications based on the outcome of the operation.\r\n     * Assumes that the `quiz` property has been populated with the updated quiz data.\r\n     * Navigates back to the quizzes list upon successful update.\r\n     */\n    editQuiz() {\n      this.quizService.updateQuiz(this.quiz).subscribe({\n        next: () => {\n          this.translate.get('QUIZ_UPDATE_SUCCESS').subscribe(msg => {\n            this.notificationService.success(msg, this.translate.instant('SUCCESS'));\n          });\n          this.quizForm.resetForm();\n          this.quiz = this.setQuizDefaultValue();\n          this.router.navigate(['/admin/quizzes']);\n        },\n        error: error => {\n          this.translate.get('QUIZ_UPDATE_ERROR').subscribe(msg => {\n            this.notificationService.error(msg, this.translate.instant('ERROR'));\n          });\n          console.error('Error updating quiz', error);\n        }\n      });\n    }\n    /**\r\n     * Sets and returns the default values for a `Quiz` object.\r\n     *\r\n     * @returns {Quiz} A `Quiz` object initialized with default values:\r\n     * - `title`: An empty string.\r\n     * - `description`: An empty string.\r\n     * - `questions`: An empty array.\r\n     * - `qId`: 0.\r\n     * - `maxMarks`: 0.\r\n     * - `numberOfQuestions`: 0.\r\n     * - `active`: false.\r\n     * - `category`: An object with `cid` as 0, and empty `title` and `description`.\r\n     */\n    setQuizDefaultValue() {\n      return this.quiz = {\n        title: '',\n        description: '',\n        questions: [],\n        qId: 0,\n        maxMarks: 0,\n        numberOfQuestions: 0,\n        active: false,\n        category: {\n          cid: 0,\n          title: '',\n          description: ''\n        }\n      };\n    }\n    static {\n      this.ɵfac = function AddQuizComponent_Factory(t) {\n        return new (t || AddQuizComponent)(i0.ɵɵdirectiveInject(i1.CategoryService), i0.ɵɵdirectiveInject(i2.NotificationService), i0.ɵɵdirectiveInject(i3.QuizService), i0.ɵɵdirectiveInject(i4.TranslateService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AddQuizComponent,\n        selectors: [[\"app-add-quiz\"]],\n        viewQuery: function AddQuizComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.quizForm = _t.first);\n          }\n        },\n        decls: 76,\n        vars: 83,\n        consts: [[\"role\", \"form\", \"aria-labelledby\", \"add-quiz-title\"], [1, \"text-center\", 2, \"display\", \"flex\", \"align-items\", \"center\", \"justify-content\", \"center\"], [\"aria-hidden\", \"true\", 2, \"margin-right\", \"8px\"], [1, \"bootstrap-wrapper\"], [1, \"row\"], [1, \"col-md-8\", \"offset-md-2\"], [\"aria-labelledby\", \"add-quiz-title\", \"autocomplete\", \"on\", 3, \"ngSubmit\"], [\"quizForm\", \"ngForm\"], [\"appearance\", \"outline\", 1, \"w100\", \"mt20\"], [\"id\", \"quiz-title-label\"], [\"type\", \"text\", \"name\", \"title\", \"matInput\", \"\", \"required\", \"\", \"autofocus\", \"\", \"aria-required\", \"true\", \"aria-describedby\", \"quiz-title-error\", \"aria-labelledby\", \"quiz-title-label\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"title\", \"ngModel\"], [\"id\", \"quiz-title-error\", \"role\", \"alert\", 4, \"ngIf\"], [\"id\", \"quiz-description-label\"], [\"name\", \"description\", \"matInput\", \"\", \"rows\", \"15\", \"required\", \"\", \"aria-required\", \"true\", \"aria-describedby\", \"quiz-description-error\", \"aria-labelledby\", \"quiz-description-label\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"description\", \"ngModel\"], [\"id\", \"quiz-description-error\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"row\", \"mt20\"], [1, \"col-md-6\"], [\"appearance\", \"outline\", 1, \"w100\"], [\"id\", \"quiz-max-marks-label\"], [\"type\", \"number\", \"name\", \"maxMarks\", \"matInput\", \"\", \"required\", \"\", \"aria-required\", \"true\", \"aria-describedby\", \"quiz-max-marks-error\", \"aria-labelledby\", \"quiz-max-marks-label\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"maxMarks\", \"ngModel\"], [\"id\", \"quiz-max-marks-error\", \"role\", \"alert\", 4, \"ngIf\"], [\"id\", \"quiz-number-of-questions-label\"], [\"type\", \"number\", \"name\", \"numberOfQuestions\", \"matInput\", \"\", \"required\", \"\", \"aria-required\", \"true\", \"aria-describedby\", \"quiz-number-of-questions-error\", \"aria-labelledby\", \"quiz-number-of-questions-label\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"numberOfQuestions\", \"ngModel\"], [\"id\", \"quiz-number-of-questions-error\", \"role\", \"alert\", 4, \"ngIf\"], [\"name\", \"active\", \"color\", \"primary\", 1, \"mt20\", \"mb10\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"quiz-category-label\"], [\"name\", \"category\", \"aria-required\", \"true\", \"aria-describedby\", \"quiz-category-error\", \"aria-labelledby\", \"quiz-category-label\", 3, \"ngModel\", \"ngModelChange\"], [\"category\", \"ngModel\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"quiz-category-error\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"container\", \"text-center\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\"], [\"type\", \"reset\", \"mat-raised-button\", \"\", \"color\", \"accent\", 1, \"ml10\", 3, \"click\"], [\"id\", \"quiz-title-error\", \"role\", \"alert\"], [\"id\", \"quiz-description-error\", \"role\", \"alert\"], [\"id\", \"quiz-max-marks-error\", \"role\", \"alert\"], [\"id\", \"quiz-number-of-questions-error\", \"role\", \"alert\"], [3, \"value\"], [\"id\", \"quiz-category-error\", \"role\", \"alert\"]],\n        template: function AddQuizComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r13 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"h1\", 1)(2, \"mat-icon\", 2);\n            i0.ɵɵtext(3, \"quiz\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(4);\n            i0.ɵɵpipe(5, \"translate\");\n            i0.ɵɵpipe(6, \"translate\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"mat-card-content\")(8, \"div\", 3)(9, \"div\", 4)(10, \"div\", 5)(11, \"form\", 6, 7);\n            i0.ɵɵlistener(\"ngSubmit\", function AddQuizComponent_Template_form_ngSubmit_11_listener() {\n              return ctx.formSubmit();\n            });\n            i0.ɵɵelementStart(13, \"mat-form-field\", 8)(14, \"mat-label\", 9);\n            i0.ɵɵtext(15);\n            i0.ɵɵpipe(16, \"translate\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"input\", 10, 11);\n            i0.ɵɵlistener(\"ngModelChange\", function AddQuizComponent_Template_input_ngModelChange_17_listener($event) {\n              return ctx.quiz.title = $event;\n            });\n            i0.ɵɵpipe(19, \"translate\");\n            i0.ɵɵpipe(20, \"translate\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(21, AddQuizComponent_mat_error_21_Template, 4, 6, \"mat-error\", 12);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(22, \"mat-form-field\", 8)(23, \"mat-label\", 13);\n            i0.ɵɵtext(24);\n            i0.ɵɵpipe(25, \"translate\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(26, \"textarea\", 14, 15);\n            i0.ɵɵlistener(\"ngModelChange\", function AddQuizComponent_Template_textarea_ngModelChange_26_listener($event) {\n              return ctx.quiz.description = $event;\n            });\n            i0.ɵɵpipe(28, \"translate\");\n            i0.ɵɵpipe(29, \"translate\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(30, AddQuizComponent_mat_error_30_Template, 4, 6, \"mat-error\", 16);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(31, \"div\", 17)(32, \"div\", 18)(33, \"mat-form-field\", 19)(34, \"mat-label\", 20);\n            i0.ɵɵtext(35);\n            i0.ɵɵpipe(36, \"translate\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(37, \"input\", 21, 22);\n            i0.ɵɵlistener(\"ngModelChange\", function AddQuizComponent_Template_input_ngModelChange_37_listener($event) {\n              return ctx.quiz.maxMarks = $event;\n            });\n            i0.ɵɵpipe(39, \"translate\");\n            i0.ɵɵpipe(40, \"translate\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(41, AddQuizComponent_mat_error_41_Template, 4, 6, \"mat-error\", 23);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(42, \"div\", 18)(43, \"mat-form-field\", 19)(44, \"mat-label\", 24);\n            i0.ɵɵtext(45);\n            i0.ɵɵpipe(46, \"translate\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(47, \"input\", 25, 26);\n            i0.ɵɵlistener(\"ngModelChange\", function AddQuizComponent_Template_input_ngModelChange_47_listener($event) {\n              return ctx.quiz.numberOfQuestions = $event;\n            });\n            i0.ɵɵpipe(49, \"translate\");\n            i0.ɵɵpipe(50, \"translate\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(51, AddQuizComponent_mat_error_51_Template, 4, 6, \"mat-error\", 27);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(52, \"mat-slide-toggle\", 28);\n            i0.ɵɵlistener(\"ngModelChange\", function AddQuizComponent_Template_mat_slide_toggle_ngModelChange_52_listener($event) {\n              return ctx.quiz.active = $event;\n            });\n            i0.ɵɵpipe(53, \"translate\");\n            i0.ɵɵtext(54);\n            i0.ɵɵpipe(55, \"translate\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(56, \"mat-form-field\", 19)(57, \"mat-label\", 29);\n            i0.ɵɵtext(58);\n            i0.ɵɵpipe(59, \"translate\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(60, \"mat-select\", 30, 31);\n            i0.ɵɵlistener(\"ngModelChange\", function AddQuizComponent_Template_mat_select_ngModelChange_60_listener($event) {\n              return ctx.quiz.category = $event;\n            });\n            i0.ɵɵpipe(62, \"translate\");\n            i0.ɵɵtemplate(63, AddQuizComponent_mat_option_63_Template, 2, 2, \"mat-option\", 32);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(64, AddQuizComponent_mat_error_64_Template, 4, 6, \"mat-error\", 33);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(65, \"div\", 34)(66, \"button\", 35);\n            i0.ɵɵpipe(67, \"translate\");\n            i0.ɵɵpipe(68, \"translate\");\n            i0.ɵɵtext(69);\n            i0.ɵɵpipe(70, \"translate\");\n            i0.ɵɵpipe(71, \"translate\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(72, \"button\", 36);\n            i0.ɵɵlistener(\"click\", function AddQuizComponent_Template_button_click_72_listener() {\n              i0.ɵɵrestoreView(_r13);\n              const _r0 = i0.ɵɵreference(12);\n              return i0.ɵɵresetView(_r0.resetForm());\n            });\n            i0.ɵɵpipe(73, \"translate\");\n            i0.ɵɵtext(74);\n            i0.ɵɵpipe(75, \"translate\");\n            i0.ɵɵelementEnd()()()()()()()();\n          }\n          if (rf & 2) {\n            const _r0 = i0.ɵɵreference(12);\n            const _r1 = i0.ɵɵreference(18);\n            const _r3 = i0.ɵɵreference(27);\n            const _r5 = i0.ɵɵreference(38);\n            const _r7 = i0.ɵɵreference(48);\n            const _r9 = i0.ɵɵreference(61);\n            i0.ɵɵproperty(\"@slideIn\", undefined);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? i0.ɵɵpipeBind1(5, 35, \"EDIT_QUIZ\") : i0.ɵɵpipeBind1(6, 37, \"ADD_QUIZ\"), \" \");\n            i0.ɵɵadvance(11);\n            i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 39, \"QUIZ_TITLE_LABEL\"));\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(19, 41, \"QUIZ_TITLE_PLACEHOLDER\"))(\"ngModel\", ctx.quiz.title);\n            i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(20, 43, \"QUIZ_TITLE_LABEL\"));\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", _r1.invalid && (_r1.dirty || _r1.touched));\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(25, 45, \"QUIZ_DESCRIPTION_LABEL\"));\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(28, 47, \"QUIZ_DESCRIPTION_PLACEHOLDER\"))(\"ngModel\", ctx.quiz.description);\n            i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(29, 49, \"QUIZ_DESCRIPTION_LABEL\"));\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", _r3.invalid && (_r3.dirty || _r3.touched));\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(36, 51, \"QUIZ_MAX_MARKS_LABEL\"));\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(39, 53, \"QUIZ_MAX_MARKS_PLACEHOLDER\"))(\"ngModel\", ctx.quiz.maxMarks);\n            i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(40, 55, \"QUIZ_MAX_MARKS_LABEL\"));\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", _r5.invalid && (_r5.dirty || _r5.touched));\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(46, 57, \"QUIZ_NUMBER_OF_QUESTIONS_LABEL\"));\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(49, 59, \"QUIZ_NUMBER_OF_QUESTIONS_PLACEHOLDER\"))(\"ngModel\", ctx.quiz.numberOfQuestions);\n            i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(50, 61, \"QUIZ_NUMBER_OF_QUESTIONS_LABEL\"));\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", _r7.invalid && (_r7.dirty || _r7.touched));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngModel\", ctx.quiz.active);\n            i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(53, 63, \"QUIZ_ACTIVE_TOGGLE\"));\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(55, 65, \"QUIZ_ACTIVE\"), \" \");\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(59, 67, \"QUIZ_CATEGORY_LABEL\"));\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngModel\", ctx.quiz.category);\n            i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(62, 69, \"QUIZ_CATEGORY_LABEL\"));\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", _r9.invalid && (_r9.dirty || _r9.touched));\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", _r0.invalid);\n            i0.ɵɵattribute(\"aria-label\", ctx.isEditMode ? i0.ɵɵpipeBind1(67, 71, \"EDIT_QUIZ\") : i0.ɵɵpipeBind1(68, 73, \"ADD_QUIZ\"));\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? i0.ɵɵpipeBind1(70, 75, \"EDIT_QUIZ\") : i0.ɵɵpipeBind1(71, 77, \"ADD_QUIZ\"), \" \");\n            i0.ɵɵadvance(3);\n            i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(73, 79, \"RESET\"));\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(75, 81, \"RESET\"), \" \");\n          }\n        },\n        dependencies: [i6.NgForOf, i6.NgIf, i7.MatInput, i8.MatFormField, i8.MatLabel, i8.MatError, i9.MatButton, i10.MatIcon, i11.ɵNgNoValidate, i11.DefaultValueAccessor, i11.NumberValueAccessor, i11.NgControlStatus, i11.NgControlStatusGroup, i11.RequiredValidator, i11.NgModel, i11.NgForm, i12.MatCard, i12.MatCardContent, i13.MatSelect, i14.MatOption, i15.MatSlideToggle, i4.TranslatePipe],\n        data: {\n          animation: [slideIn]\n        }\n      });\n    }\n  }\n  return AddQuizComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}