{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { slideIn } from 'src/app/animations/animations';\nlet ViewCategoriesComponent = class ViewCategoriesComponent {\n  constructor(categoryService, notificationService, router, translate) {\n    this.categoryService = categoryService;\n    this.notificationService = notificationService;\n    this.router = router;\n    this.translate = translate;\n    this.categories = [];\n    this.page = 0;\n    this.size = 7;\n    this.totalPages = 1;\n    this.searchTerm = '';\n  }\n  ngOnInit() {\n    this.fetchCategoriesPaged();\n  }\n  /**\r\n   * Fetches a paginated list of categories from the backend service.\r\n   * Updates the local `categories` property and `totalPages` based on the response.\r\n   * Displays an error notification if the request fails.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n  fetchCategoriesPaged() {\n    this.categoryService.getCategoriesPaged(this.page, this.size, this.searchTerm).subscribe({\n      next: data => {\n        this.categories = data.content;\n        this.totalPages = data.totalPages;\n      },\n      error: () => {\n        this.notificationService.error(this.translate.instant('CATEGORIES_LOAD_ERROR'), this.translate.instant('ERROR'));\n      }\n    });\n  }\n  /**\r\n   * Navigates the user to the \"Add Category\" page within the admin section.\r\n   *\r\n   * This method uses Angular's Router to redirect the user to the route\r\n   * responsible for adding a new category.\r\n   */\n  addCategory() {\n    this.router.navigate(['/admin/add-category']);\n  }\n  /**\r\n   * Navigates to the edit category page.\r\n   */\n  editCategory(categoryId) {\n    this.router.navigate(['/admin/add-category', categoryId]);\n  }\n  /**\r\n   * Deletes a category by its id after confirmation and updates the local list.\r\n   * Shows a notification on success or error.\r\n   */\n  deleteCategory(categoryId) {\n    this.notificationService.confirm(this.translate.instant('CATEGORY_DELETE_CONFIRM'), this.translate.instant('CONFIRM')).then(confirmed => {\n      if (confirmed) {\n        this.categoryService.deleteCategory(categoryId).subscribe({\n          next: () => {\n            this.categories = this.categories.filter(cat => cat.cid !== categoryId);\n            this.notificationService.success(this.translate.instant('CATEGORY_DELETED_SUCCESS'), this.translate.instant('SUCCESS'));\n          },\n          error: () => {\n            this.notificationService.error(this.translate.instant('CATEGORY_DELETE_ERROR'), this.translate.instant('ERROR'));\n          }\n        });\n      }\n    });\n  }\n  /**\r\n   * Executes a search for categories based on the current search term.\r\n   * Resets the page to 0 (first page) and fetches the categories.\r\n   *\r\n   * @returns {void}\r\n   */\n  onSearch() {\n    this.page = 0; // Reset to first page on new search\n    this.fetchCategoriesPaged();\n  }\n  /**\r\n   * Navigates to the specified page of categories if within valid range.\r\n   *\r\n   * @param {number} page - The page number to navigate to.\r\n   * @returns {void}\r\n   */\n  goToPage(page) {\n    if (page >= 0 && page < this.totalPages) {\n      this.page = page;\n      this.fetchCategoriesPaged();\n    }\n  }\n  onSearchTermChange(term) {\n    this.searchTerm = term;\n    this.page = 0; // Reset to first page on new search\n    this.fetchCategoriesPaged();\n  }\n};\nViewCategoriesComponent = __decorate([Component({\n  selector: 'app-view-categories',\n  templateUrl: './view-categories.component.html',\n  styleUrls: ['./view-categories.component.css'],\n  animations: [slideIn]\n})], ViewCategoriesComponent);\nexport { ViewCategoriesComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}